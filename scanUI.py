# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'scan_utility.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from src.virus_total_api import scanp2
from src.clam_scanner import scanp1


class Ui_scanUtilityWindow(object):
    def setupUi(self, scanUtilityWindow):
        scanUtilityWindow.setObjectName("scanUtilityWindow")
        scanUtilityWindow.resize(800, 532)
        scanUtilityWindow.setMaximumSize(QtCore.QSize(800, 700))

        #Logo
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        scanUtilityWindow.setWindowIcon(icon)

        scanUtilityWindow.setStyleSheet("background-color: rgb(0, 0, 34);\n"
            "color: rgb(168, 232, 203);\n"
            "gridline-color: rgb(138, 237, 246);")
        self.centralwidget = QtWidgets.QWidget(scanUtilityWindow)
        self.centralwidget.setObjectName("centralwidget")

        #Group box to bring all elements under one function
        self.scanBox = QtWidgets.QGroupBox(self.centralwidget)
        self.scanBox.setGeometry(QtCore.QRect(30, 0, 741, 471))
        self.scanBox.setStyleSheet("background-color: rgb(0, 32, 63);\n"
            "font: 9pt \"MS Shell Dlg 2\";\n"
            "color: rgb(255, 255, 255);")
        self.scanBox.setObjectName("scanBox")

        #Terminate Scan
        self.stopButton = QtWidgets.QPushButton(self.scanBox, clicked = lambda: self.startScanning())
        self.stopButton.setGeometry(QtCore.QRect(550, 340, 161, 31))
        self.stopButton.setStyleSheet("QPushButton{\n"
                                        "    font: 75 9pt \"MS Shell Dlg 2\";\n"
                                        "    color: rgb(0, 0, 0);\n"
                                        "    background-color: rgb(173, 240, 209);\n"
                                        "    border-radius: 5px\n"
                                        "}\n"
                                        "QPushButton:hover{\n"
                                        "    background-color: rgb(138, 237, 246);\n"
                                        "}")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.stopButton.setIcon(icon1)
        self.stopButton.setObjectName("stopButton")

        # Show Logs button
        self.logsButton = QtWidgets.QPushButton(self.scanBox, clicked = lambda: self.updateLogs())
        self.logsButton.setGeometry(QtCore.QRect(150, 340, 161, 31))
        self.logsButton.setStyleSheet("QPushButton{\n"
                                      "    font: 75 9pt \"MS Shell Dlg 2\";\n"
                                      "    color: rgb(0, 0, 0);\n"
                                      "    background-color: rgb(173, 240, 209);\n"
                                      "    border-radius: 5px\n"
                                      "}\n"
                                      "QPushButton:hover{\n"
                                      "    background-color: rgb(138, 237, 246);\n"
                                      "}")
        self.logsButton.setObjectName("logsButton")

        self.driveName = QtWidgets.QLabel(self.scanBox)
        self.driveName.setGeometry(QtCore.QRect(40, 30, 271, 21))
        self.driveName.setObjectName("driveName")
        self.keyLabel = QtWidgets.QLabel(self.scanBox)
        self.keyLabel.setGeometry(QtCore.QRect(40, 70, 371, 21))
        self.keyLabel.setObjectName("keyLabel")
        self.totalLabel = QtWidgets.QLabel(self.scanBox)
        self.totalLabel.setGeometry(QtCore.QRect(480, 70, 191, 21))
        self.totalLabel.setObjectName("totalLabel")
        self.scanLabel = QtWidgets.QLabel(self.scanBox)
        self.scanLabel.setGeometry(QtCore.QRect(60, 390, 101, 25))
        self.scanLabel.setObjectName("scanLabel")

        #Progress Bar
        self.progressBar = QtWidgets.QProgressBar(self.scanBox)
        self.progressBar.setGeometry(QtCore.QRect(170, 393, 271, 21))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")

        #displaying VT results
        self.scanloglabel = QtWidgets.QLabel(self.scanBox)
        self.scanloglabel.setGeometry(QtCore.QRect(40, 100, 671, 231))
        self.scanloglabel.setStyleSheet("font: 8pt \"OCR A Extended\";\n"
                                        "background-color: rgb(0, 25, 48);\n"
                                        "color: rgb(152, 211, 184);")
        self.scanloglabel.setTextFormat(QtCore.Qt.RichText)
        self.scanloglabel.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop)
        self.scanloglabel.setWordWrap(True)
        self.scanloglabel.setOpenExternalLinks(True)
        self.scanloglabel.setObjectName("scanloglabel")

        #Quit Utility
        self.exitButton = QtWidgets.QPushButton(self.scanBox, clicked = lambda: self.closer())
        self.exitButton.setGeometry(QtCore.QRect(620, 420, 93, 28))
        self.exitButton.setStyleSheet("QPushButton{\n"
            "    font: 75 9pt \"MS Shell Dlg 2\";\n"
            "    color: rgb(0, 0, 0);\n"
            "    background-color: rgb(173, 240, 209);\n"
            "    border-radius: 5px\n"
            "}\n"
            "QPushButton:hover{\n"
            "    background-color: rgb(138, 237, 246);\n"
            "}")
        self.exitButton.setObjectName("exitButton")
        scanUtilityWindow.setCentralWidget(self.centralwidget)

        #Settings menu to enter own VT API key
        self.menubar = QtWidgets.QMenuBar(scanUtilityWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        scanUtilityWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(scanUtilityWindow)
        self.statusbar.setObjectName("statusbar")
        scanUtilityWindow.setStatusBar(self.statusbar)
        self.enterVTKey = QtWidgets.QAction(scanUtilityWindow)
        self.enterVTKey.setObjectName("enterVTKey")
        self.menuSettings.addAction(self.enterVTKey)
        self.menubar.addAction(self.menuSettings.menuAction())

        self.retranslateUi(scanUtilityWindow)
        QtCore.QMetaObject.connectSlotsByName(scanUtilityWindow)

    def startScanning(self):
        print("scan started")
        p1 = scanp1().csav_run("E:\\")
        print("Malwares shifted")
        p2 = scanp2().write_hashes()
        print("VirusTotal Report generated")
        self.progressBar.setValue(100)
        self.logsButton.show()

    def updateLogs(self):
        with open('scanlog.txt', 'r') as file:
            data = file.read()
            self.scanloglabel.setText(data)
        print("Logs screen updated")

    def closer(self):
        import sys
        sys.exit()

    def retranslateUi(self, scanUtilityWindow):
        _translate = QtCore.QCoreApplication.translate
        scanUtilityWindow.setWindowTitle(_translate("scanUtilityWindow", "Scanning Utility"))
        self.scanBox.setTitle(_translate("scanUtilityWindow", "Scanning"))
        self.stopButton.setText(_translate("scanUtilityWindow", "  Start Scanning"))
        self.logsButton.setText(_translate("scanUtilityWindow", "Show Logs"))
        self.logsButton.hide()
        self.driveName.setText(_translate("scanUtilityWindow", "Scanning Drive: E:/"))
        self.keyLabel.setText(_translate("scanUtilityWindow", "Virus Total Key: d93b0f6a*******"))
        self.totalLabel.setText(_translate("scanUtilityWindow", "Total Malwares Found: "))
        self.scanLabel.setText(_translate("scanUtilityWindow", "Scan Progress: "))
        self.exitButton.setText(_translate("scanUtilityWindow", "EXIT"))
        self.menuSettings.setTitle(_translate("scanUtilityWindow", "Settings"))
        self.enterVTKey.setText(_translate("scanUtilityWindow", "Enter VT API key"))

